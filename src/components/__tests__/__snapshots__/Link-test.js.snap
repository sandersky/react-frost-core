// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Link functions as expected when design is infoBar with icon 1`] = `
<Link
  design="infoBar"
  icon="add"
>
  <a
    className="frost-link info-bar"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link functions as expected when design is infoBar with text 1`] = `
<Link
  design="infoBar"
  text="foobar"
>
  <a
    className="frost-link info-bar"
    onClick={[Function]}
    tabIndex={null}
  >
    foobar
  </a>
</Link>
`;

exports[`Link functions as expected when design is inline with icon 1`] = `
<Link
  design="inline"
  icon="add"
>
  <a
    className="frost-link inline"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link functions as expected when design is inline with text 1`] = `
<Link
  design="inline"
  text="foobar"
>
  <a
    className="frost-link inline"
    onClick={[Function]}
    tabIndex={null}
  >
    foobar
  </a>
</Link>
`;

exports[`Link functions as expected when design is set with text 1`] = `
<Link
  design="infoBar"
  text="foobar"
>
  <a
    className="frost-link info-bar"
    onClick={[Function]}
    tabIndex={null}
  >
    foobar
  </a>
</Link>
`;

exports[`Link functions as expected when priority is set alongside design 1`] = `"The \\"design\\" property takes precedence over \\"priority\\" and \\"size\\"."`;

exports[`Link functions as expected when size is set alongside design 1`] = `"The \\"design\\" property takes precedence over \\"priority\\" and \\"size\\"."`;

exports[`Link when large primary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link baz disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link baz disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large primary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz primary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link baz disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link baz disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary large"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when large secondary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <a
    className="frost-link baz secondary large"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link baz disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link baz disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium primary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz primary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link baz disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link baz disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary medium"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when medium secondary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <a
    className="frost-link baz secondary medium"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link baz disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link baz disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled primary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small primary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz primary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content frost-link-text"
    >
      foobar
      <div
        className="frost-link-svg"
      >
        <Icon
          icon="open-tabs"
        >
          <svg
            className="frost-icon frost-icon-frost-open-tabs"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-open-tabs"
            />
          </svg>
        </Icon>
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link baz disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link baz disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz disabled secondary small"
    onClick={[Function]}
    tabIndex={-1}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <a
    className="frost-link baz"
    onClick={[Function]}
    tabIndex={null}
  />
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Link
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Link
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      />
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;

exports[`Link when small secondary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Link
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <a
    className="frost-link baz secondary small"
    onClick={[Function]}
    tabIndex={null}
  >
    <div
      className="frost-link-content"
    >
      <div
        className="frost-link-text"
      >
        foobar
      </div>
    </div>
  </a>
</Link>
`;
