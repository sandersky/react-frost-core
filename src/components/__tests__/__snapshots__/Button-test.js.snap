// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button functions as expected when design is infoBar with icon 1`] = `
<Button
  design="infoBar"
  icon="add"
>
  <button
    className="frost-button info-bar"
    onClick={[Function]}
  >
    <div
      className="frost-button-content"
    >
      <div
        className="frost-button-text"
      >
        <div
          className="frost-button-svg"
        >
          <Icon
            icon="add"
          >
            <svg
              className="frost-icon frost-icon-frost-add"
            >
              <use
                xlinkHref="frost-pack.svg#sprite-add"
              />
            </svg>
          </Icon>
        </div>
        <div
          className="frost-button-text"
        />
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button functions as expected when design is infoBar with text 1`] = `
<Button
  design="infoBar"
  text="foobar"
>
  <button
    className="frost-button info-bar"
    onClick={[Function]}
  >
    <div
      className="frost-button-content"
    >
      <div
        className="frost-button-text"
      >
        <div
          className="frost-button-svg"
        />
        <div
          className="frost-button-text"
        >
          foobar
        </div>
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button functions as expected when design is inline with icon 1`] = `
<Button
  design="in-line"
  icon="add"
>
  <button
    className="frost-button in-line"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    />
  </button>
</Button>
`;

exports[`Button functions as expected when design is inline with text 1`] = `
<Button
  design="in-line"
  text="foobar"
>
  <button
    className="frost-button in-line"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button functions as expected when design is set with text 1`] = `
<Button
  design="app-bar"
  text="foobar"
>
  <button
    className="frost-button app-bar"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button functions as expected when priority is set alongside design 1`] = `"The \\"design\\" property takes precedence over \\"priority\\" and \\"size\\"."`;

exports[`Button functions as expected when size is set alongside design 1`] = `"The \\"design\\" property takes precedence over \\"priority\\" and \\"size\\"."`;

exports[`Button functions as expected when vertical is set to false 1`] = `
<Button
  text="foobar"
  vertical={false}
>
  <button
    className="frost-button"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button functions as expected when vertical is set to true 1`] = `
<Button
  text="foobar"
  vertical={true}
>
  <button
    className="frost-button vertical"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when design property set throws an error if icon and text properties are missing 1`] = `"The \\"design\\" property requires the \\"icon\\" or \\"text\\" property to be set."`;

exports[`Button when large cancel button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "cancel",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "cancel",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large cancel explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "confirm",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "confirm",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large confirm explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large normal button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large normal button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "normal",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "normal",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large normal explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large primary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large primary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "primary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large primary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "secondary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large secondary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled large tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "tertiary",
      "size": "large",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "tertiary",
        "size": "large",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when large tertiary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="large"
  text="foobar"
>
  <button
    className="frost-button baz large tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "cancel",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "cancel",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium cancel explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "confirm",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "confirm",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium confirm explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "normal",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "normal",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium normal explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "primary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium primary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "secondary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium secondary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled medium tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "tertiary",
      "size": "medium",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "tertiary",
        "size": "medium",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when medium tertiary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="medium"
  text="foobar"
>
  <button
    className="frost-button baz medium tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "cancel",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "cancel",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small cancel explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="cancel"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "confirm",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "confirm",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small confirm explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="confirm"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small normal button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small normal button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "normal",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "normal",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small normal explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="normal"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small primary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small primary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small primary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "primary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "primary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small primary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="primary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small primary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small secondary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "secondary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "secondary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small secondary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="secondary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small secondary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary disabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": true,
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": true,
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary disabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={true}
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz frost-button-disabled small tertiary"
    disabled={true}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "icon": "add",
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "icon": "add",
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick not set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  props={
    Object {
      "disabled": false,
      "priority": "tertiary",
      "size": "small",
      "text": "foobar",
    }
  }
>
  <button
    className="frost-button baz"
    onClick={[Function]}
    props={
      Object {
        "disabled": false,
        "priority": "tertiary",
        "size": "small",
        "text": "foobar",
      }
    }
  />
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className not set with icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className not set with icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className not set with text and icon set functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className not set with text and icon set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className not set with text set functions as expected 1`] = `
<Button
  disabled={false}
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className not set with text set when pressed functions as expected 1`] = `
<Button
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className set with icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className set with icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon"
    >
      <Icon
        icon="add"
      >
        <svg
          className="frost-icon frost-icon-frost-add"
        >
          <use
            xlinkHref="frost-pack.svg#sprite-add"
          />
        </svg>
      </Icon>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className set with text and icon set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className set with text and icon set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  icon="add"
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-icon-text frost-button-text"
    >
      <div
        className="frost-button-icon"
      >
        <Icon
          icon="add"
        >
          <svg
            className="frost-icon frost-icon-frost-add"
          >
            <use
              xlinkHref="frost-pack.svg#sprite-add"
            />
          </svg>
        </Icon>
      </div>
      <div
        className="frost-button-text"
      >
        foobar
      </div>
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className set with text set functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={[MockFunction]}
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;

exports[`Button when small tertiary explicitly enabled button when onClick set when className set with text set when pressed functions as expected 1`] = `
<Button
  className="baz"
  disabled={false}
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
    }
  }
  priority="tertiary"
  size="small"
  text="foobar"
>
  <button
    className="frost-button baz small tertiary"
    disabled={false}
    onClick={[Function]}
  >
    <div
      className="frost-button-text"
    >
      foobar
    </div>
  </button>
</Button>
`;
